trigger:
- master

variables:
- group: global-vars

stages:
- stage: CI
  displayName: CI - Stage
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Preparation
    steps:
    - task: TerraformInstaller@0
      displayName: 'Terraform install'
      inputs:
        terraformVersion: '0.15.4'
    - task: TerraformTaskV2@2
      displayName: 'Terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        backendServiceArm: 'Development'
        backendAzureRmResourceGroupName: '$(RESOURCE_GROUP_NAME)'
        backendAzureRmStorageAccountName: '$(STORAGE_ACCOUNT_NAME)'
        backendAzureRmContainerName: '$(CONTAINER_NAME)'
        backendAzureRmKey: '$(STORAGE_KEY)'
    - task: TerraformTaskV2@2
      displayName: 'Terraform validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
    - task: TerraformTaskV2@2
      displayName: 'Terraform plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        commandOptions: '-var-file=vars_pro.tfvars -out=plan.tfplan'
        environmentServiceNameAzureRM: 'Development'
    # - task: CopyFiles@2
    #   displayName: 'Copy terraform plan to artifacts'
    #   inputs:
    #     SourceFolder: '$(System.DefaultWorkingDirectory)/terraform/'
    #     Contents: '**'
    #     TargetFolder: '$(Build.Artifactstagingdirectory)'
    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish terraform plan'
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'terraform'
    #     publishLocation: 'Container'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/terraform/'
        artifact: 'Plan'
        publishLocation: 'pipeline'

- stage: CD
  displayName: CD - Stage
  pool:
    vmImage: ubuntu-latest
  jobs:
  - deployment: Deploy
    continueOnError: false
    environment: 'Development IaC'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'Plan'
              targetPath: '$(System.DefaultWorkingDirectory)/terraform/'
          - task: TerraformTaskV2@2
            displayName: 'Terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
              backendServiceArm: 'Development'
              backendAzureRmResourceGroupName: '$(RESOURCE_GROUP_NAME)'
              backendAzureRmStorageAccountName: '$(STORAGE_ACCOUNT_NAME)'
              backendAzureRmContainerName: '$(CONTAINER_NAME)'
              backendAzureRmKey: '$(STORAGE_KEY)'
# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(System.DefaultWorkingDirectory)/terraform/'
#     Contents: '**'
#     TargetFolder: '$(Build.Artifactstagingdirectory)'
#   displayName: 'Copy terraform plan to artifacts'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'terraform'
#     publishLocation: 'Container'
#   displayName: 'Publish terraform plan'
